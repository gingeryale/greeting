$darken-color: #505054; // The color you want to use
$lighten-color: rgb(243, 251, 252); /*hsl(241deg, 49%, 41%);*/
$testD: #004c56;
$testL: #fff;

$step: 1; // Set the initial step value

//The "<= #" determines the number of steps you want this while loop to create

@while $step <=12  {

// darkens color step by step
h2.greeting [aria-hidden] b:nth-child(#{$step}) {
    // Here we use the SASS darken function and darken our color by 2% each time.  Set this to whatever percentage you like. 
    color: darken($darken-color, ($step * 2%));
    background-color: lighten($lighten-color, ($step * 2%));
}

h2.greeting [aria-hidden]:hover b:nth-child(#{$step}) {
    // Here we use the SASS darken function and darken our color by 2% each time.  Set this to whatever percentage you like. 
    color: lighten($testD, ($step * 2%));
}

// Increment the step up by 1 so it continues until you've reached 10 (which you specified at the beginning of the function)
$step: $step + 1;
}

/**
 * Clearfix
 */
%clearfix {

    &:after {
        content: "";
        display: table;
        clear: both;
    }
}


/**
 * Icons
 */
.icon {

    > svg {
        display: inline-block;
        width: 18px;
        height: 18px;
        vertical-align: middle;

        path {
            fill: #1bbccf;
        }
    }
}

/**
* Text rule
*/
%text-rule {
        font-size: 1.4em;
        color: #494949;
        line-height: 1.45em;
}


body{
	display: block;
	margin: 0 auto;
	padding: 0;
	max-width:80vw;
	border:3px solid $blue-neon;
    font-family: Avenir, Futura, 'Open Sans', 'Gill Sans', 'Helvetica Neue', Arial, sans-serif;
    min-height: 100vh;
    background-color: rgb(233, 232, 249);;
    background-image: url('https://c2.staticflickr.com/8/7739/17668630904_7932a02c7d_k.jpg');
    background-position: 10% 90%;
}

main{
    background-color: rgba(10, 148, 194, 0.45);
    display:block;
    // border:5px solid #9D67DB;
}


.home{
    display:flex;
    flex-direction:column;
}
.header-svg{
    display:flex;
    justify-content:center;
    padding:1rem;
}
h2.greeting [aria-hidden]{
    display: flex;
    flex-wrap: wrap;
    padding:1em;
    justify-content:flex-end;
    }

h2.greeting [aria-hidden] b{
    display: flex;
    justify-content: center;
    align-items: center;
    text-transform: uppercase;
    width: 3em;
    height:calc(3rem + 10vh);
    font-size: 2.8rem;
    margin: 0 0.2rem 0.2rem 0;
    will-change: transform;
    transition: transform 1s;
    line-height: 1;
}


// h2.greeting [aria-hidden] b:nth-of-type(7){
//     display:none;
// }

figure.photo{
        img.self-pic{
        display:block;
        width:220px;
        margin:0 auto;
        transition: all 0.3s cubic-bezier(.78,.29,.53,.83);
        clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
            &:hover{
                clip-path: polygon(25% 0%, 100% 0%, 75% 100%, 0% 100%);
                filter: blur(5px) hue-rotate(215deg) saturate(99%);
                ~ figcaption{
                        text-align: left;
                    }
                }
        }
    figcaption.pic-desc{
    width:220px;
    margin:0 auto;
    text-align:center;
    transition: all 0.9s ease;
    color: $whitesmoke-alpha;
    line-height: 2rem;
    }
}

article.intro-block{
    width:67vw;
    max-width: 67vw;
    border: 3px solid $red-magic;
    align-self:center;
    margin:0 0 1em 0;
    padding: 1em;
    background-color: $whitesmoke-alpha;
    background-image: linear-gradient(#cfe9b3 2px, transparent 2px),
    linear-gradient(90deg, #cfe9b3 1px, transparent 1px),
    linear-gradient(rgba(4,141,54,.2) 1px, transparent 1px),
    linear-gradient(90deg, rgba(4,141,54,.2) 1px, transparent 1px);
    background-size:100px 100px, 100px 100px, 20px 20px, 20px 20px;
    background-position:-2px -2px, -2px -2px, -1px -1px, -1px -1px;
        > p {
        @extend %text-rule;
        }
         > p span.headline {
        color: #04b8ce;
        font-weight: bold;
        font-size: 1.5rem;
        }
        > p span.rtl-healine{
            color: $red-magic;
            font-weight: bold;
    }
}



@supports (display: XXgrid) { 

.home{
    display:grid;
    grid-template-columns: repeat(8, 1fr);
    grid-template-rows: 2, 1fr;  
}
article.spinner{
   grid-row: 1/2;
   grid-column:1/9;
}
h2.greeting{
    padding: 0.5em;
    perspective: 500px;

}
h2.greeting [aria-hidden] {
    display: grid;
    grid-gap:0.250rem;
    grid-template-columns: repeat(6, 1fr) 0;
    // width:100%;
        > b{
            background: #3e3d3d;
            height: calc(3rem + 10vh);
            text-transform: uppercase;
            width: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 2.8rem;
            will-change: transform;
            transition: transform 1s;
            line-height: 1;
        }
    }
    section.intro{
        display:grid;
        grid-column:1/9;
        justify-content:center;
    }



    @media only screen and (max-width: $med-mobile) {
        h2.greeting{
            padding:0;
            border:3px solid yellow;
            }
        h2.greeting [aria-hidden]{
            padding: 0.5em 0.3em;
            > b{
                height: calc(2rem + 4vh);
                font-size: 1.3rem;
            }
        }
            

        } /* end media Q 480 */
}


section.intro{
        display:flex;
        justify-content: center;
        flex-direction:column;
}





    article.spinner [aria-hidden]:hover b:nth-of-type(2n) {
    transform: rotateX(-395deg);
    }
    // article.spinner [aria-hidden] b:nth-of-type(2n):hover {
    //     transform: rotateY(-355deg);
    // }
    article.spinner [aria-hidden]:hover b:nth-of-type(2n+1) {
        transform: rotateY(-360deg);
    }


@media screen and (max-width: $desktop-std) {
    h2.greeting [aria-hidden] {
        > b{
            width: 2.2em;
        }
    }
}
@media screen and (min-width: $desktop-std) {
    h2.greeting [aria-hidden] b {
        width: 3em;
    }
}

@media screen and (max-width: $tablet) {
    h2.greeting [aria-hidden] {
        justify-content: center;
        > b{
            width: 3em;
        }
    }
}


@media screen and (max-width: $med-mobile) {
    h2.greeting [aria-hidden] b{
        height: calc(2rem + 3vh);
        font-size: 1.3rem;
        width: 3.4em;
    }
    figure.photo img.self-pic, figure.photo figcaption.pic-desc{
        width:175px;
    }
    article.intro-block{
        padding:0 1em;
        > p span.headline{
            font-size: 1.25em;
        }
        > p{
            font-size: 1.1em;
        }
    }
    .footer-col ul {
    padding-left: 1em;
    }
}

@media screen and (max-width: $xtra-small) {
    h2.greeting [aria-hidden]{
            padding: 0.55em;
        }
}



.c-hamburger--htx {
    background-color: #ff3264;
    border: 1px solid #ff3264;
}

.c-hamburger {
  display: block;
  position: relative;
  overflow: hidden;
  margin: 0;
  padding: 0;
  width: 30px;
  height: 22px;
  font-size: 0;
  text-indent: -9999px;
  appearance: none;
  box-shadow: none;
  border-radius: none;
  border: none;
  cursor: pointer;
  transition: background 0.3s;
}

.c-hamburger:focus {
  outline: none;
}

.c-hamburger span {
  display: block;
  position: absolute;
  top: 10px;
  left: 5px;
  right: 5px;
  height: 3px;
  background: white;
}

.c-hamburger span::before,
.c-hamburger span::after {
  position: absolute;
  display: block;
  left: 0;
  width: 100%;
  height: 3px;
  background-color: #fff;
  content: "";
}

.c-hamburger span::before {
  top: -7px;
}

.c-hamburger span::after {
  bottom: -7px;
}
.c-hamburger--htx span {
  transition: background 0s 0.3s;
}

.c-hamburger--htx span::before,
.c-hamburger--htx span::after {
  transition-duration: 0.3s, 0.3s;
  transition-delay: 0.3s, 0s;
}

.c-hamburger--htx span::before {
  transition-property: top, transform;
}

.c-hamburger--htx span::after {
  transition-property: bottom, transform;
}

/* active state, i.e. menu open */
.c-hamburger--htx.is-active {
  background-color: #cb0032;
}

.c-hamburger--htx.is-active span {
  background: none;
}

.c-hamburger--htx.is-active span::before {
  top: 0;
  transform: rotate(45deg);
}

.c-hamburger--htx.is-active span::after {
  bottom: 0;
  transform: rotate(-45deg);
}

.c-hamburger--htx.is-active span::before,
.c-hamburger--htx.is-active span::after {
  transition-delay: 0s, 0.3s;
}