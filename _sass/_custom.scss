$darken-color: #fefcdf; // The color you want to use
$lighten-color: #1b1b34; /*hsl(241deg, 49%, 41%);*/

$step: 1; // Set the initial step value

//The "<= #" determines the number of steps you want this while loop to create

@while $step <=12  {

// darkens color step by step
h2.greeting [aria-hidden] b:nth-child(#{$step}) {
    // Here we use the SASS darken function and darken our color by 2% each time.  Set this to whatever percentage you like. 
    color: darken($darken-color, ($step * 2%));
    background-color: lighten($lighten-color, ($step * 2%));
}

// Increment the step up by 1 so it continues until you've reached 10 (which you specified at the beginning of the function)
$step: $step + 1;
}

/**
 * Clearfix
 */
%clearfix {

    &:after {
        content: "";
        display: table;
        clear: both;
    }
}


/**
 * Icons
 */
.icon {

    > svg {
        display: inline-block;
        width: 16px;
        height: 16px;
        vertical-align: middle;

        path {
            fill: #000000;
        }
    }
}




body{
	display: block;
	margin: 0 auto;
	padding: 0;
	max-width:80vw;
	background-color: #e5f8f2; /*#d2e1e6;*/
	border:2px solid yellow;
    font-family: Avenir, Futura, 'Open Sans', 'Gill Sans', 'Helvetica Neue', Ariel, sans-serif;

}

main{
	background-color: #e1fef5;
    display:block;
    // border:5px solid #9D67DB;
}


.home{
    display:flex;
    flex-direction:column;
}
h2.greeting [aria-hidden]{
    display: flex;
    flex-wrap: wrap;
    }

h2.greeting [aria-hidden] b{
    display: flex;
    justify-content: center;
    flex-flow: row wrap;
    width: 2em;
    font-size: 3.2em;
    margin: 0 0.2rem 0.2rem 0;
    will-change: transform;
    transition: transform 1s;
    line-height: 1;
}


// h2.greeting [aria-hidden] b:nth-of-type(7){
//     display:none;
// }

figure.photo{
    width:100%;
        img.self-pic{
        transition: all 0.2s cubic-bezier(.78,.29,.53,.83);
        clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
        display:block;
        width:250px;
        margin:0 auto;
            &:hover{
                clip-path: polygon(25% 0%, 100% 0%, 75% 100%, 0% 100%);
                filter: blur(5px) hue-rotate(140deg) saturate(120%);
                }
        }
    figcaption.pic-desc{
    width:250px;
    margin:0 auto;
    text-align:center;
    }
}




@supports (display: XYgrid) { 

.home{
    display:grid;
    grid-template-columns: repeat(8, 1fr);
    grid-template-rows: repeat(4, 1fr);  
}
article.spinner{
   grid-row: 1/3;
   grid-column:1/9;
}
h2.greeting{
    padding: 0.5em;
    perspective: 500px;

}
h2.greeting [aria-hidden] {
    display: grid;
    grid-gap:0.250rem;
    grid-template-columns: repeat(6, 1fr) 0;
    width:100%;
    }
h2.greeting [aria-hidden] b{
    background: #3e3d3d;
    height: calc(3rem + 4vh);
    text-transform: uppercase;
    color: #bdf0e7;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 2.8rem;
    will-change: transform;
    transition: transform 1s;
    line-height: 1;
    }
}





    article.spinner [aria-hidden]:hover b:nth-of-type(2n) {
    transform: rotateX(-395deg);
    }
    // article.spinner [aria-hidden] b:nth-of-type(2n):hover {
    //     transform: rotateY(-355deg);
    // }
    article.spinner [aria-hidden]:hover b:nth-of-type(2n+1) {
        transform: rotateY(-360deg);
    }



















